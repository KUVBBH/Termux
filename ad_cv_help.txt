1.
____________________________________________
Android(a,ip) > 类
    参数a(int)----位置参数
    参数ip(str)---关键字参数   
    ip默认127.0.0.1 , 本机使用无需传入ip ; 

下面示例为本机使用，传入端口号就行;
端口号在 : 设置>开发者选项>无线调试>ip地址和端口

a = Android(43091)
*下面所有步骤，都以这个实例a举例
______________________________________________


2.
______________________________________________
ADB(a) > 执行adb命令
    参数a(str)----位置参数
需要执行ADB命令,与CMD环境下相同,返回值为adb命令的返回值

data = a.ADB('adb devices')
print(data)
______________________________________________


3.
______________________________________________
tap(a) > 点击屏幕
    参数a(list)----位置参数
    一个 列表[x,y] 或者 元组(x,y) >>>x,y为坐标值(int)

a.tap([500,500])
*点击屏幕500,500的位置
______________________________________________



4.
______________________________________________
swipe(a) > 滑动 
    参数a(list)----位置参数
    一个 列表[x1,y1,x2,y2,time] 或者 元组(x1,y1,x2,y2,time)>>>x,y为坐标值(int)

类似于关键帧 ，表示在time时间内，由a坐标到b坐标

a.swipe((100,0,100,1000,300))
*在300ms内，从坐标(100,0)滑动到坐标(100,1000)
______________________________________________



5.
______________________________________________
activity_get(a) > 获取activity用于启动应用
    参数a(str)----应用的包名 
没有返回值
用Es文件浏览器打开/storage/emulated/0/Android/data目录,然后找到相应的包名
例如,qq : com.tencent.mobileqq

a.activity_get('com.tencent.mobileqq')
______________________________________________



6.
______________________________________________
activity_start(a) > 启动应用 
    参数a(str)----第五步获取的activity

a.activity_start('com.tencent.mobileqq/.activity.SplashActivity')
*启动QQ
______________________________________________



7.
______________________________________________
a.get_now_button(a) > 获取当前页面布局
    参数a(str)----用于字典查找
返回值为一个包含了按钮名称和坐标的字典,
同时结果也会放入Android.button

but=a.get_now_button('termux')
*获取termux界面的布局下面8,9以这里拿到的but结果举例
______________________________________________




8.
______________________________________________
a.get_button_png(but,path) > 获取每个按钮的png图标
    参数but(dict)----第7步的结果
    参数path(str)----文件夹路径&已经存在的路径
没有返回值

a.get_button_png (but,'/storage/emulated/0/python/截图')
*获得的按钮图片将放到/storage/emulated/0/python/截图
______________________________________________




9.
______________________________________________
a.button_tap(but,b) > 点击按钮
    参数but(dict)----第7步的结果
    参数b(str)----按钮名称

a.button_tap(but,'CTRL')
*点击termux界面的CTRL键



10.
______________________________________________
opencv_find(png,threshold=0.9,RANDOM=5,BF=True,show=False,tap=False,SH=False) > 通过图片找到按钮坐标

opencv_find(png)

png(str) > 图片路径

threshold(float) > 相似度 , 默认0.9

RANDOM(int) > 坐标随机偏移 , 默认5,表示在10x10像素的区域里随机取一个点

BF(bool) > 读取的图片放到列表里 , 默认True

show(bool) > 是否打印信息 , 默认False

tap(bool) > 是否自动点击 ，默认False,有返回值 ,True会自动执行一次tap()函数，没有返回值

SH(bool) > True 是通过subprocess.popen()执行adb点击命令，反之为os.system()


xy=a.opencv_find('/storage/emulated/0/python/截图/ctrl.png')
if a :
    a.tap(xy)

*/storage/emulated/0/python/截图/ctrl.png > termux 'ctrl'按钮的图片

*找到ctrl是否在当前界面，如果在就返回坐标，否则，返回False

*然后通过tap()点击

*通过图片匹配，比button_tap()更快.
________________________________________



11.
______________________________________________
END() > 断开adb链接
a.END()
______________________________________________
